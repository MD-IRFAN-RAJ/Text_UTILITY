{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","myStyle","setMyStyle","useState","color","backgroundColor","btnText","setBtnText","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","onClick","toggleStyle","border","Navbar","props","concat","mode","href","title","aria-label","aria-current","role","placeholder","toggleMode","htmlFor","TextForm","text","setText","Fragment","heading","value","onChange","event","target","rows","handleUpCase","newText","toUpperCase","handleLowCase","toLowerCase","textToSpeech","window","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","alert","length","split","Alert","msg","App","setMode","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f8b9b146.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setMyStyle] = useState({\r\n        color: 'white',\r\n        backgroundColor: 'black'\r\n    })\r\n    const [btnText, setBtnText] = useState('Enable Dark Mode')\r\n    const toggleStyle = () => {\r\n        if (myStyle.color === 'black') {\r\n            setMyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n                border : '1px solid white'\r\n            })\r\n            setBtnText(\"Enable Light Mode\")\r\n        }\r\n        else {\r\n            setMyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white',\r\n                border : '1px solid black'\r\n            })\r\n            setBtnText(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n      <div className=\"container\" style={myStyle}>\r\n          <h2 className=\"my-2\">About Us</h2>\r\n        <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\">\r\n                    <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    Accordion Item #1\r\n                    </button>\r\n                 </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                 <h2 className=\"accordion-header\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                 </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                         Accordion Item #3\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                         <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"container my-4\">\r\n              <button onClick={toggleStyle} type=\"button\" className=\"btn btn-secondary\">{btnText}</button>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n//import PropTypes from 'propTypes'\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}  >\r\n        <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                          <a className=\"nav-link\" href=\"/\">{props.About}</a>\r\n            </li>\r\n        </ul>\r\n          <form className=\"d-flex mx-1\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">dark mode</label>\r\n          </div>\r\n          </div>\r\n    </div>\r\n      </nav>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpCase = () => {\r\n    // console.log('Uppercase was clicked');\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n  }\r\n  \r\n\r\n  const handleLowCase = () => {\r\n    // console.log('Uppercase was clicked');\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n  }\r\n  const textToSpeech = () => {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      window.speechSynthesis.speak(utterance);\r\n    } else {\r\n      alert('Sorry, your browser does not support text to speech.');\r\n    }\r\n  };\r\n  \r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'#020330'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'grey',color:props.mode==='dark'?'white':'#020330'}} id=\"myBox\" rows=\"8\" ></textarea>\r\n        </div>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleUpCase}>Convert to upperCase</button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleLowCase} >Convert to lowerCase</button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={textToSpeech} >Read aloud</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#020330'}}>\r\n        <h2>Your Output here</h2>\r\n        <p>{text.length} characters and {text.split(\" \").length} words</p>\r\n        <p>{0.008*text.split(\" \").length} minutes read</p>\r\n        <h4>Preview</h4>\r\n        <p>{text.length>0?text:\"Enter text to preview\"}</p>\r\n      </div>\r\n      </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div>\r\n      {props.alert && (\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n\r\n      </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#020330';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n\n  }\n  return (\n    <>\n\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} About=\"About Us\" />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm heading=\"Enter the text to analyze\" mode={mode} />\n\n      </div>\n      <div className=\"container my-5\" >\n        <About/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}